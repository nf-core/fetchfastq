/*
========================================================================================
    Config file for defining DSL2 per module options and publishing paths
========================================================================================
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

//
// Generic process options for all workflows
//
process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: 'copy',
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: 'copy',
            pattern: '*_versions.yml'
        ]
    }

}


process {

    withName: PYSRADB {
        publishDir = [
            path: { "${params.outdir}" },
            enabled: false
        ]
    }

    withName: SRA_IDS_TO_RUNINFO {
        publishDir = [
            path: { "${params.outdir}/sra" },
            enabled: false
        ]
    }

    withName: SRA_RUNINFO_TO_FTP {
        publishDir = [
            path: { "${params.outdir}/sra" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: SRA_FASTQ_FTP {
        ext.args = '--retry 5 --continue-at - --max-time 1200'
        publishDir = [
            [
                path: { "${params.outdir}/fastq" },
                mode: 'copy',
                pattern: "*gz"
            ],
            [
                path: { "${params.outdir}/fastq/md5" },
                mode: 'copy',
                pattern: "*.md5"
            ]
        ]
    }

    withName: SRATOOLS_PREFETCH {
        publishDir = [
            path: { "${params.outdir}/sra" },
            enabled: false
        ]
    }

    withName: SRATOOLS_FASTERQDUMP {
        publishDir = [
            [
                path: { "${params.outdir}/fastq" },
                mode: 'copy',
                pattern: "*gz"
            ],
            [
                path: { "${params.outdir}/fastq/md5" },
                mode: 'copy',
                pattern: "*.md5"
            ]
        ]
    }

    withName: SRA_TO_SAMPLESHEET {
        publishDir = [
            path: { "${params.outdir}/samplesheet" },
            enabled: false
        ]
    }

    withName: SRA_MERGE_SAMPLESHEET {
        publishDir = [
            path: { "${params.outdir}/samplesheet" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: DGMFINDER_ANALYSIS {
        publishDir = [
            [
                path: { "${params.outdir}/dgmfinder" },
                mode: 'copy',
                pattern: "*gz"
            ],
            [
                path: { "${params.outdir}/dgmfinder/fasta" },
                mode: 'copy',
                pattern: "*fasta"
            ],
            [
                path: { "${params.outdir}/dgmfinder/xml" },
                mode: 'copy',
                pattern: "*xml"
            ],
            [
                path: { "${params.outdir}/dgmfinder/logs" },
                mode: 'copy',
                pattern: "*log"
            ]
        ]
    }

    withName: CONSENSUS_ANCHORS {
        publishDir = [
            [
                path: { "${params.outdir}/string_stats" },
                mode: 'copy',
                pattern: "*tab"
            ],
            [
                path: { "${params.outdir}/string_stats" },
                mode: 'copy',
                pattern: "*fasta"
            ],
            [
                path: { "${params.outdir}/string_stats/logs" },
                mode: 'copy',
                pattern: "*log"
            ]
        ]
    }

    withName: ADJACENT_ANCHORS {
        publishDir = [
            path: { "${params.outdir}/string_stats" },
            mode: 'copy',
            pattern: "*fasta"
        ]
    }

}




nextflow_pipeline {

    name "Test Workflow main.nf"
    script "main.nf"
    tag "sra_with_viralrecon"
    tag "workflow"

    test("SRA NF-CORE/VIRALRECON Samplesheet") {

        when {
            params {
                outdir           = "$outputDir"
                nf_core_pipeline = "viralrecon"
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(NftestUtils.removeNextflowVersion("$outputDir")).match("software_versions") },
                { assert snapshot(path("$outputDir/fastq/").list()).match("fastq") },
                { assert snapshot(path("$outputDir/metadata/DRR026872.runinfo_ftp.tsv"),
                                path("$outputDir/metadata/DRR028935.runinfo_ftp.tsv"),
                                path("$outputDir/metadata/ERR1109373.runinfo_ftp.tsv"),
                                path("$outputDir/metadata/ERR1160846.runinfo_ftp.tsv"),
                                path("$outputDir/metadata/GSE214215.runinfo_ftp.tsv"),
                                path("$outputDir/metadata/SRR12848126.runinfo_ftp.tsv"),
                                path("$outputDir/metadata/SRR13191702.runinfo_ftp.tsv"),
                                path("$outputDir/metadata/SRR14593545.runinfo_ftp.tsv"),
                                path("$outputDir/metadata/SRR14709033.runinfo_ftp.tsv"),
                                path("$outputDir/metadata/SRR9984183.runinfo_ftp.tsv")).match("metadata") },
                { assert new File("$outputDir/metadata/GSM4907283.runinfo_ftp.tsv").exists() },
                { assert snapshot(path("$outputDir/samplesheet/id_mappings.csv"),
                                path("$outputDir/samplesheet/multiqc_config.yml")).match("samplesheet") },
                { assert new File("$outputDir/samplesheet/samplesheet.csv").exists() }
            )
        }
    }
}
